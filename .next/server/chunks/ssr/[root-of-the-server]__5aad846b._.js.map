{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/gianpierreterry/Desktop/argus/src/app/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,4IAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/gianpierreterry/Desktop/argus/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/app/lib/utils\"\n\ninterface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {\n  className?: string;\n}\n\nfunction Label({ className, ...props }: LabelProps) {\n  const LabelRoot = LabelPrimitive.Root as any; // Type assertion\n  \n  return (\n    <LabelRoot\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport default Label;"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAWA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAmB;IAChD,MAAM,YAAY,iKAAA,CAAA,OAAmB,EAAS,iBAAiB;IAE/D,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,0HAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;uCAEe","debugId":null}}]
}